library(dplyr)
library(ggplot2)
library(dplyr)
library(ggplot2)
summary(diamonds)
summary(cars)
diamonds  %>% group_by(carat)
diamonds  %>% group_by(carat)  %>%  filter (cut = "Premium")
diamonds  %>% group_by(carat)  %>%  filter (cut == "Premium")
diamonds  %>% group_by(carat)  %>%  filter (cut == "Good")
diamonds  %>% group_by(carat)  %>%  filter (cut == "Good")  %>% cols(3)
diamonds  %>% group_by(carat)  %>%  filter (cut == "Good")  %>% cols("carat")
diamonds  %>% group_by(carat)  %>%  filter (cut == "Good")  %>% columns(1:3)
diamonds  %>% group_by(carat)  %>%  filter (cut == "Good")  %>% columns(1to3)
diamonds  %>% group_by(carat)  %>%  filter (cut == "Good")  %>% columns("carat","cut","depth")
diamonds  %>% group_by(carat)  %>%  filter (cut == "Good")  %>% columns("carat","cut","depth")
library(tidyr, warn.conflicts=FALSE, quietly=TRUE)
library(readr, warn.conflicts=FALSE, quietly=TRUE)
library(dplyr, warn.conflicts=FALSE, quietly=TRUE)
library(ggplot2, warn.conflicts=FALSE, quietly=TRUE)
library(rpart, warn.conflicts=FALSE, quietly=TRUE)
library(randomForest, warn.conflicts=FALSE, quietly=TRUE)
library(party, warn.conflicts=FALSE, quietly=TRUE)
library(rattle)
library(rpart.plot)
library(RColorBrewer)
setwd("D:/Github/Experiments_Data/Exp2_Kaggle_Titanicdata_ggplot2_shiny")
train <- tbl_df(read.csv("train.csv",stringsAsFactors=FALSE))
test <- tbl_df(read.csv("test.csv",stringsAsFactors=FALSE))
train$Child <- 0
train$Child[is.na(train$Age)] <- NA
train$Child[!is.na(train$Age) & train$Age < 18] <- 1
aggregate(Survived ~ Pclass + Child + Sex, data = train, FUN = function(x){sum(x)/length(x)})
my_tree <- rpart(Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked, data = train, method = "class")
plot(my_tree)
text(my_tree)
fancyRpartPlot(my_tree, f)
prediction_tree <- predict(my_tree, test, type = "class")
kaggle_solution_tree <- data.frame(PassengerId = test$Name, Survived = prediction_tree)
write.csv(kaggle_solution_tree, file="kaggle_soln_dectree.csv" , row.names = FALSE)
# load clearned up titanic file (titanic_clean.csv)
train_two <- tbl_df(read.csv("titanic_clean.csv",stringsAsFactors=FALSE))
prediction_tree <- predict(my_tree, train_two, type = "class")
kaggle_solution_tree <- data.frame(PassengerId = train_two$Name, Survived = prediction_tree)
write.csv(kaggle_solution_tree, file="kaggle_soln_dectree.csv" , row.names = FALSE)
train_two$Fare[is.na(train_two$Fare)] <- 0;
train_two$Sex <- factor(train_two$Sex)
train_two$Embarked <- factor(train_two$Embarked)
train_two$family_size <- train_two$SibSp + train_two$Parch + 1
forrest <- randomForest(as.factor(Survived) ~  Pclass + Sex + Age + Fare + SibSp + Parch + family_size + Embarked, data=train_two, importance=TRUE, ntree=2000)
varImpPlot(forrest)
prediction_forrest <- predict(forrest, train_two)
kaggle_solution_forrest <- data.frame(PassengerId = train_two$Name, Survived = prediction_forrest)
write.csv(kaggle_solution_forrest, file="kaggle_soln_forrest.csv" , row.names = FALSE)
set.seed (400)
party <- cforest(as.factor(Survived) ~  Pclass + Sex + Age + Fare + SibSp + Parch + family_size + Embarked, data=train_two, controls=cforest_unbiased(ntree=2000, mtry=3))
prediction_inf_forrest <- predict(party, train_two, OOB=TRUE, type="response")
kaggle_solution_inf_forrest <- data.frame(PassengerId = train_two$Name, Survived = prediction_inf_forrest)
write.csv(kaggle_solution_inf_forrest, file="kaggle_soln_inf_forrest.csv" , row.names = FALSE)
